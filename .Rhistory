rm(list = ls())
library(dplyr)
library(readxl)
medals = read.csv("~/FAC/olympics_dataset.csv")
#first we have to clean our data bases and create one with all data we need inside
medals = medals %>%
select(-player_id, -Event, -NOC) %>%
filter(Medal != "No medal") %>%
rename(country = Team) %>%
rename(year = Year)
medals_by_country = medals %>%
group_by(country, year, City) %>%
summarise(
total_bronze = sum(Medal == "bronze"),
total_silver = sum(Medal == "Silver"),
total_gold = sum(Medal == "Gold"),
total_medals = n()
) %>%
ungroup()
gdp_per_hab = read_excel("~/gdp.xlsx", sheet = "Full data")
gdp_per_hab = gdp_per_hab %>%
select(-countrycode) %>%
mutate(growth = as.numeric(growth))
database = medals_by_country %>%
left_join(gdp_per_hab, by = c("country", "year"))
democracy = read.csv("~/democracy.csv")
democracy = democracy %>%
select(-ID_country_code, -ID_country_year, -ID_region, -ID_subregion, -ID_region_name, -ID_subregion_name, -C_SD11, -C_SD12, -C_SD13, -C_SD14, -C_SD21, -C_SD22, -C_SD23 , -C_SD31, -C_SD32, -C_SD33, -C_SD41, -C_SD42) %>%
rename(country = ID_country_name) %>%
rename(year = ID_year)
reg = lm(total_medals ~ gdppc + pop + hdi, data = database)
hdi = hdi %>%
select(-countryIsoCode, -indexCode, -index, -dimension, - indicatorCode, -indicator, -note) %>%
mutate(year = as.numeric(year)) %>%
rename(hdi = value)
str(hdi)
database = database %>%
left_join(hdi, by = c("country", "year"))
View(database)
database = database %>%
left_join(democracy, by = c("country", "year"))
gov_expenditures = read_excel("~/gov_expenditures.xlsx")
rm(list = ls())
library(dplyr)
library(readxl)
medals = read.csv("~/FAC/olympics_dataset.csv")
#first we have to clean our data bases and create one with all data we need inside
medals = medals %>%
select(-player_id, -Event, -NOC) %>%
filter(Medal != "No medal") %>%
rename(country = Team) %>%
rename(year = Year)
medals_by_country = medals %>%
group_by(country, year, City) %>%
summarise(
total_bronze = sum(Medal == "bronze"),
total_silver = sum(Medal == "Silver"),
total_gold = sum(Medal == "Gold"),
total_medals = n()
) %>%
ungroup()
gdp_per_hab = read_excel("~/gdp.xlsx", sheet = "Full data")
gdp_per_hab = gdp_per_hab %>%
select(-countrycode) %>%
mutate(growth = as.numeric(growth))
database = medals_by_country %>%
left_join(gdp_per_hab, by = c("country", "year"))
hdi = read_excel("~/hdr-data.xlsx")
hdi = hdi %>%
select(-countryIsoCode, -indexCode, -index, -dimension, - indicatorCode, -indicator, -note) %>%
mutate(year = as.numeric(year)) %>%
rename(hdi = value)
database = database %>%
left_join(hdi, by = c("country", "year"))
gov_expenditures = read_excel("~/gov_expenditures.xlsx")
View(gov_expenditures)
gov_expenditures = read_excel("~/gov_expenditures.xlsx")
gov_expenditures = gov_expenditures %>%
renmae(country = ...1)
gov_expenditures = read_excel("~/gov_expenditures.xlsx")
gov_expenditures = gov_expenditures %>%
rename(country = ...1)
gov_expenditures = gov_expenditures %>%
rename(country = ...1) %>%
pivot_longer (
col = -country,
names_to = "year",
values_to = "expenditures"
)
database = database %>%
left_join(democracy, by = c("country", "year"))
rm(list = ls())
library(dplyr)
library(readxl)
medals = read.csv("~/FAC/olympics_dataset.csv")
#first we have to clean our data bases and create one with all data we need inside
medals = medals %>%
select(-player_id, -Event, -NOC) %>%
filter(Medal != "No medal") %>%
rename(country = Team) %>%
rename(year = Year)
medals_by_country = medals %>%
group_by(country, year, City) %>%
summarise(
total_bronze = sum(Medal == "bronze"),
total_silver = sum(Medal == "Silver"),
total_gold = sum(Medal == "Gold"),
total_medals = n()
) %>%
ungroup()
gdp_per_hab = read_excel("~/gdp.xlsx", sheet = "Full data")
gdp_per_hab = gdp_per_hab %>%
select(-countrycode) %>%
mutate(growth = as.numeric(growth))
database = medals_by_country %>%
left_join(gdp_per_hab, by = c("country", "year"))
hdi = read_excel("~/hdr-data.xlsx")
hdi = hdi %>%
select(-countryIsoCode, -indexCode, -index, -dimension, - indicatorCode, -indicator, -note) %>%
mutate(year = as.numeric(year)) %>%
rename(hdi = value)
database = database %>%
left_join(hdi, by = c("country", "year"))
gov_expenditures = read_excel("~/gov_expenditures.xlsx")
gov_expenditures = gov_expenditures %>%
rename(country = ...1) %>%
pivot_longer (
col = -country,
names_to = "year",
values_to = "expenditures"
)
library(tydr)
library(tidyr)
gov_expenditures = read_excel("~/gov_expenditures.xlsx")
gov_expenditures = gov_expenditures %>%
rename(country = ...1) %>%
pivot_longer (
col = -country,
names_to = "year",
values_to = "expenditures"
)
gov_expenditures <- gov_expenditures %>%
mutate(across(where(is.numeric), as.character)) # Convertit les colonnes numériques en caractères
gov_expenditures = gov_expenditures %>%
rename(country = ...1) %>%
pivot_longer (
col = -country,
names_to = "year",
values_to = "expenditures"
)
View(gov_expenditures)
database = databse %>%
left_join(gov_expenditures, by = c("country", "year"))
database = database %>%
left_join(gov_expenditures, by = c("country", "year"))
gov_expenditures = read_excel("~/gov_expenditures.xlsx")
gov_expenditures = gov_expenditures %>%
mutate(across(where(is.character()), as.numeric))  %>%
rename(country = ...1) %>%
pivot_longer (
col = -country,
names_to = "year",
values_to = "expenditures"
)
gov_expenditures = read_excel("~/gov_expenditures.xlsx")
gov_expenditures = gov_expenditures %>%
mutate(across(where(is.numeric), as.character))  %>%
rename(country = ...1) %>%
pivot_longer (
col = -country,
names_to = "year",
values_to = "expenditures") %>%
mutate(year = as.numeric(year))
database = database %>%
left_join(gov_expenditures, by = c("country", "year"))
View(database)
reg = lm(total_medals ~ gdppc + pop + hdi + expenditures, data = database)
summary(reg)
str(gov_expenditures)
source("~/JO.R", echo=TRUE)
gov_expenditures = gov_expenditures %>%
mutate(across(where(is.numeric), as.character))  %>%
rename(country = ...1) %>%
pivot_longer (
col = -country,
names_to = "year",
values_to = "expenditures") %>%
mutate(year = as.numeric(year)) %>%
mutate(expenditures = as.numeric(expenditures))
gov_expenditures = read_excel("~/gov_expenditures.xlsx")
gov_expenditures = gov_expenditures %>%
mutate(across(where(is.numeric), as.character))  %>%
rename(country = ...1) %>%
pivot_longer (
col = -country,
names_to = "year",
values_to = "expenditures") %>%
mutate(year = as.numeric(year)) %>%
mutate(expenditures = as.numeric(expenditures))
database = database %>%
left_join(gov_expenditures, by = c("country", "year"))
rm(list = ls())
library(dplyr)
library(readxl)
library(tidyr)
#we import our data bases
medals = read.csv("~/FAC/olympics_dataset.csv")
gdp_per_hab = read_excel("~/gdp.xlsx", sheet = "Full data")
democracy = read.csv("~/democracy.csv")
hdi = read_excel("~/hdr-data.xlsx")
gov_expenditures = read_excel("~/gov_expenditures.xlsx")
#first we have to clean our data bases and create one with all data we need inside
medals = medals %>%
select(-player_id, -Event, -NOC) %>%
filter(Medal != "No medal") %>%
rename(country = Team) %>%
rename(year = Year)
medals_by_country = medals %>%
group_by(country, year, City) %>%
summarise(
total_bronze = sum(Medal == "bronze"),
total_silver = sum(Medal == "Silver"),
total_gold = sum(Medal == "Gold"),
total_medals = n()
) %>%
ungroup()
gdp_per_hab = gdp_per_hab %>%
select(-countrycode) %>%
mutate(growth = as.numeric(growth))
database = medals_by_country %>%
left_join(gdp_per_hab, by = c("country", "year"))
hdi = hdi %>%
select(-countryIsoCode, -indexCode, -index, -dimension, - indicatorCode, -indicator, -note) %>%
mutate(year = as.numeric(year)) %>%
rename(hdi = value)
database = database %>%
left_join(hdi, by = c("country", "year"))
gov_expenditures = gov_expenditures %>%
mutate(across(where(is.numeric), as.character))  %>%
rename(country = ...1) %>%
pivot_longer (
col = -country,
names_to = "year",
values_to = "expenditures") %>%
mutate(year = as.numeric(year)) %>%
mutate(expenditures = as.numeric(expenditures))
database = database %>%
left_join(gov_expenditures, by = c("country", "year"))
View(database)
reg = lm(total_medals ~ gdppc + pop + hdi + expenditures, data = database)
summary(reg)
